/* 2021/05/01
통계교육원_데이터 분석을 위한 SQL 입문_집계(통계)함수 활용
*/

/* GROUP BY */
SELECT JOB_ID, SUM(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID >= 50
GROUP BY JOB_ID
ORDER BY JOB_ID DESC; 

SELECT JOB_ID, SUM(SALARY), ROUND(AVG(SALARY), 1)
FROM EMPLOYEES
WHERE DEPARTMENT_ID >= 50
GROUP BY JOB_ID
ORDER BY JOB_ID; 

SELECT JOB_ID, DEPARTMENT_ID, SUM(SALARY), AVG(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID >= 50
GROUP BY JOB_ID, DEPARTMENT_ID
ORDER BY JOB_ID DESC; 

/* HAVING */
SELECT JOB_ID, SUM(SALARY) 합계, ROUND(AVG(SALARY), 1) 평균
FROM EMPLOYEES
WHERE DEPARTMENT_ID >= 50
GROUP BY JOB_ID
HAVING SUM(salary) > 50000
ORDER BY JOB_ID ASC;

SELECT JOB_ID, AVG(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING AVG(SALARY) > 7000
ORDER BY JOB_ID ASC;

SELECT JOB_ID, AVG(SALARY)
FROM EMPLOYEES
WHERE MANAGER_ID >= 130
GROUP BY JOB_ID
HAVING AVG(SALARY) > 7000
ORDER BY JOB_ID ASC;

/* 실습 1) EMPLOYEES 테이블에서 JOB_ID(그룹화), SALARY 합 출력 */
SELECT JOB_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID;

/* 실습 2) EMPLOYEES 테이블에서 EMPLOYEE_ID가 150이상인 DEPARTMENT_ID의 SALARY평균을 내림차순으로 출력 */
SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES
WHERE EMPLOYEE_ID >= 150
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID DESC;

/* 실습 3) EMPLOYEES 테이블에서 SALARY 합이 30,000이상인 JOB_ID, SALARY합을 JOB_ID 기준으로 내림차순하여 출력 (HAVING만 사용)*/
SELECT JOB_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING SUM(SALARY) >= 30000
ORDER BY JOB_ID DESC;
